version: '3.8'

services:
  # Zookeeper Service (required for Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2182:2182"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - social-media-network

  # Kafka Service
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - social-media-network
    healthcheck: # Added healthcheck for Kafka
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server kafka:9092 --list || exit 1"] # Check if Kafka responds
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s # Give Kafka time to warm up before first check


  # Kafka UI for monitoring Kafka (optional but helpful)
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - social-media-network
  rec-service: # Renamed from recommendation-service for brevity as per your compose file
    build:
      context: ./rec-service # Assuming your service code is in a folder named 'recommendation-service'
    container_name: rec-service
    depends_on:
      kafka:
        condition: service_healthy # IMPORTANT: Wait for Kafka to be healthy
    networks:
      - social-media-network
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092 # Connects to Kafka via its service name
    restart: "unless-stopped" # Keep running unless explicitly stopped
  

networks:
  social-media-network:
    driver: bridge