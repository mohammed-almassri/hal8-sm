server:
  port: 8081

spring:
  main:
    allow-circular-references: true
  application:
    name: user-service
    
  # Database Configuration
  datasource:
    url: jdbc:postgresql://postgres:5432/microtwitter_users
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 5
      connection-timeout: 30000
      initialization-fail-timeout: 30000
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  
  # Redis Configuration
  data:
    redis:
      host: redis
      port: 6379
      
  # Kafka Configuration
  kafka:
    bootstrap-servers: kafka:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: user-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"

# JWT Configuration
jwt:
  secret: your-256-bit-secret-key-here
  expiration: 86400000 # 24 hours in milliseconds

# Logging
logging:
  level:
    com.microtwitter: DEBUG
    org.springframework.security: INFO

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
